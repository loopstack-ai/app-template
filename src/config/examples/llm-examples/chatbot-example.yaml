include:
  - core/tools/create-chat-message.yaml

workflows:
  - name: chatbot_workflow
    title: "Chatbot"
    type: stateMachine
    ui:
      buttons:
        - widget: chat
          label: Chat
          transition: add_user_message
          enabledWhen:
            - waiting_for_user
    transitions:

      - name: initialize
        from: start
        to: waiting_for_user

      - name: add_user_message
        from: waiting_for_user
        to: user_message_added
        when: manual
        call:
          - tool: create_chat_message
            arguments:
              role: user
              content: ${ transition.payload }

      - name: create_llm_response
        from: user_message_added
        to: llm_response_received
        call:
          - tool: chatbot_llm_tool
            exportVariable: PROMPT_RESULT

      - name: add_assistant_message
        from: llm_response_received
        to: waiting_for_user
        call:
          - tool: create_chat_message
            arguments:
              role: ${ PROMPT_RESULT.response.data.role }
              content: ${ PROMPT_RESULT.response.data.content }

tools:
  - name: chatbot_llm_tool
    execute:
      handler: ExecutePromptMessagesHandler
      arguments:
        llm:
          envApiKey: OPENAI_KEY
          model: gpt-4o
        messagesSearchTag: message

pipelines:
  - name: chatbot_example
    title: "LLM Example 1: Chatbot"
    workspace: examples
    type: root
    sequence:
      - workflow: chatbot_workflow
