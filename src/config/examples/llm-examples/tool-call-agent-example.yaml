include:
  - core/tools/create-chat-message.yaml
  - core/tools/batch-create-messages.yaml
  - core/tools/switch-target.yaml
  - core/tools/delegate-tool-calls.yaml
  - examples/examples-workspace.yaml

workflows:
  - name: agent_workflow
    title: "Tool Call Agent"
    type: stateMachine
    transitions:

      - name: create_system_prompt
        from: start
        to: system_prompt_created
        call:
          - tool: create_chat_message
            arguments:
              role: system
              content: |
                You are a helpful assistant.
                Call the user by his name when you interact.
                Use tools to find the user's name
                User ID: 12345

      - name: mock_user_message
        from: system_prompt_created
        to: message_received
        call:
          - tool: create_chat_message
            arguments:
              role: user
              content: |
                Say hello.

      - name: prompt
        from: message_received
        to: prompt_executed
        call:
          - tool: prompt_with_tools
            as: PROMPT_RESULT

      - name: add_prompt_response_message
        from: prompt_executed
        to: response_received
        call:
          - tool: batch_create_messages
            arguments:
              items: ${ PROMPT_RESULT.steps[0].response.messages }

      - name: call_tools
        from: response_received
        to: tools_called
        call:
          - tool: delegate_tool_calls
            arguments:
              messages: ${ PROMPT_RESULT.steps[0].response.messages }
            as: TOOL_RESPONSES
          - tool: batch_create_messages
            arguments:
              items: ${ TOOL_RESPONSES }

      - name: loop_back_when_tool_responses
        from: tools_called
        to:
          - message_received
          - end
        call:
          - tool: switch_target
            arguments:
              target: "{{#if TOOL_RESPONSES.length }}message_received{{else}}end{{/if }}"

tools:
  - name: get_user_name
    description: "Get the user name by ID"
    parameters:
      type: object
      properties:
        userId:
          type: string
          description: "The user ID"
      required:
        - userId
    execute:
      - handler: MockHandler
        arguments:
          input: "User ID: {{ arguments.userId }}"
          output: "The Username is Jakob"

  - name: prompt_with_tools
    execute:
      - handler: AiGenerateTextHandler
        arguments:
          llm:
            provider: openai
            model: gpt-4o
          messagesSearchTag: message
          tools:
            - get_user_name

pipelines:
  - name: agent_example
    title: "LLM Example 2: Tool Call Agent"
    workspace: examples
    type: root
    sequence:
      - workflow: agent_workflow
