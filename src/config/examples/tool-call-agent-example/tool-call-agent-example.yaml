workflows:
  - name: examples_toolCallAgent_workflow
    type: stateMachine
    transitions:

      - name: createSystemPrompt
        from: start
        to: systemPromptCreated
        call:
          - tool: core_createChatMessage
            arguments:
              role: system
              content: |
                You are a helpful assistant.
                Call the user by his name when you interact.
                Use tools to find the user's name
                User ID: 12345

      - name: mockUserMessage
        from: systemPromptCreated
        to: messageReceived
        call:
          - tool: core_createChatMessage
            arguments:
              role: user
              content: |
                Say hello.

      - name: promptLlm
        from: messageReceived
        to: promptExecuted
        call:
          - tool: examples_toolCallAgent_promptLlm
            exportAs: PROMPT_RESULT

      - name: addPromptResponseMessage
        from: promptExecuted
        to: responseReceived
        call:
          - tool: core_createChatMessage
            arguments:
              role: ${ PROMPT_RESULT.response.data.role }
              content: ${ PROMPT_RESULT.response.data.content }
              tool_calls: ${ PROMPT_RESULT.response.data.tool_calls }

      - name: checkForToolCalls
        from: responseReceived
        to:
          - toolCallsReceived
          - complete
        call:
          - tool: core_switchTarget
            arguments:
              target: |
                ${ PROMPT_RESULT.response.data['tool_calls']?.length > 0 ? 'toolCallsReceived' : 'complete' }

      - name: callTools
        from: toolCallsReceived
        to: toolsCalled
        call:
          - tool: core_delegateToolCalls
            arguments:
              toolCalls: ${ PROMPT_RESULT.response.data['tool_calls'] }
            exportAs: TOOL_RESPONSES

      - name: addToolResponses
        from: toolsCalled
        to: messageReceived
        call:
          - tool: core_batchCreateMessages
            arguments:
              items: ${ TOOL_RESPONSES }

tools:
  - name: examples_toolCallAgent_getUserName
    description: "Get the user name by ID"
    parameters:
      type: object
      properties:
        userId:
          type: string
          description: "The user ID"
      required:
        - userId
    execute:
      service: MockService
      arguments:
        input: |
          ${ `User ID: ${arguments.userId}` }
        output: "The Username is Jakob"

  - name: examples_toolCallAgent_promptLlm
    execute:
      service: ExecutePromptMessagesService
      arguments:
        llm:
          envApiKey: OPENAI_KEY
          model: gpt-4o
        messagesSearchTag: message
        tools:
          - examples_toolCallAgent_getUserName

pipelines:
  - name: examples_toolCallAgent
    title: "Tool Call Agent Example"
    workspace: examples
    entrypoint: examples_toolCallAgent_workflow
